def generate_tcl_script(hex_file_path, output_tcl_path):
    # Read the hex data from the file
    with open(hex_file_path, 'r') as file:
        hex_data = file.read().strip()

    # Split the hex data into lines, assuming each line is a separate data entry
    hex_lines = hex_data.split('\n')

    # Prepare the TCL script template
    tcl_script = (
"""
# Blink leds loader
#
# Autogenerated

reset_hw_axi [get_hw_axis hw_axi_1]
set bram_address 0x00000000
set wt axi_bram_wt
create_hw_axi_txn $wt [get_hw_axis hw_axi_1] -type write -address $bram_address -len {len} -data {{
{hex_data}
}}

run_hw_axi [get_hw_axi_txns $wt]

set rt axi_bram_rt
create_hw_axi_txn $rt [get_hw_axis hw_axi_1] -type read -address $bram_address -len {len}
run_hw_axi [get_hw_axi_txns $rt]
""")

    # Insert the hex data into the template
    tcl_script = tcl_script.format(len=len(hex_lines), hex_data='\n    '.join(hex_lines))

    # Write the TCL script to the output file
    with open(output_tcl_path, 'w') as file:
        file.write(tcl_script)

    
generate_tcl_script('sensor.hex', 'sensor.tcl')
